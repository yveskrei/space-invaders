■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■\
■Turbo Assembler Shell Version 3.00■\
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■\
■                                  ■\
■   ▀▀▀▀▀▀▀▀▀▀\    ▀▀▀▀▀▀\         ■\
■       ▀▀\       ▀▀\   ▀▀\        ■\
■       ▀▀\       ▀▀\              ■\
■       ▀▀\        ▀▀▀▀▀▀\         ■\
■       ▀▀\             ▀▀\        ■\
■       ▀▀\       ▀▀\   ▀▀\        ■\
■       ▀▀\        ▀▀▀▀▀▀\         ■\
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■\
■   Copyright (c) Sergey Chehuta   ■\
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■\


   Обо всем этом более подробно и о многом 
другом Вы можете прочитать в файле помощи.


 1.   Введение
 2.   Возможности программы
 2.1. Конфигурация
 2.2. Редактор
 2.3. Альтернативный редактор
 2.4. Создание программ
 2.5. TS.DSK
 2.6. Запуск программ
 2.7. Помощь
 2.8. Справка по клавишам
 2.9. Макросы
 3.   MASM , LINK & TS
 4.   "Недокументированные" возможности
 4.1. Настройка ошибок
 5.   Планы на будущее
 6.   О себе


 1.Введение
~~~~~~~~~~~~

  При  написании программы  на  ассемблере, программисту  приходится
выполнять ряд шагов:
 a - запуск редактора
 b - набор исходного текста
 c - сохранение
 d - выход из редактора
 e - запуск компилятора
 f - запуск компоновщика
 g - запуск собственно программы самостоятельно и/или под отладчиком

  Если  при  выполнении пунктов  'e'  и  'f' выявляются  ошибки,  то
приходится  возвращаться к  пункту 'a',  и весь  процесс повторяется
сначала.
  Если  же все  благополучно,  то для  внесения  чего-либо нового  в
создаваемую программу,  опять-таки приходится возвращаться  к пункту
'a'.


 2.Возможности программы 
~~~~~~~~~~~~~~~~~~~~~~~~~

  Программа Turbo Shell позволяет  максимально сократить паузы между
вышеперечисленными  пунктами.  Все,   что  необходимо  при  создании
программы, имеется внутри TS:
 - редактор
 - внешний редактор
 - запуск компилятора и компоновщика
 - запуск полученной программы
 - поддержка makefile
 - запуск отладчика
 - передача параметров создаваемой программе
 - просмотр ошибок компиляции
 - временный выход в OS и запуск любых программ, например TechHelp.
 - смена  диска,   директории,  получение  справочной  информации  о
   системе
 - калькулятор, окна просмотра скэн-кодов и всех символов
 - анти-глюкер

 Достоинства:
 - минимум  занимаемой  памяти -  чуть больше  40 Kb  сама программа
   Turbo Shell, вся остальная  память выделяется при необходимости и
   освобождается при запуске программ.
 - программа,  на мой взгляд очень  гибкая в настройке -  изменяя ее
   опции,  можно заставить  ее работать  практически с  любым языком
   программирования,  который  содержит   компиляторы  с  коммандной
   строкой.

 Ограничения:
 - использование  TASM.EXE,  TLINK.EXE  или  им  подобных  например,
   MASM.EXE  & LINK.EXE  подходят с  некоторыми ограничениями.
 - версия DOS 3.0 и выше

! Turbo Shell является  абсолютно "прозрачной" программой для других
  - данная  программа ничего не  меняет на Вашем  компьютере: режимы
  работы,  вектора прерываний  и т.д.  Резиденты, запущенные  из под
  TS  работают  после  выхода   из  программы  абсолютно  нормально.
  Единственное, что  может остаться  после Turbo  Shell -  "дырка" в
  памяти:
          ┌─────────┬───────┬───────────┬────────────────┐
          │         │ Turbo │Резидентная│ Свободная      │
          │ DOS     │ Shell │ программа │ память         │
          │         │       │запущенная │                │
          │         │       │ из TS     │                │
     0000h└─────────┴───────┴───────────┴────────────────┘0ffffh
     		     ^^^^^^^
                здесь после выхода остается "дырка"


Использование программы:
 TS.COM [parameters] [filename.ext] [parameters]
 Параметры:
  /bg - не заполнять фон
  /co - цветная цветовая схема
  /bw - черно-белая цветовая схема
  /ds - насильная загрузка файла ts.dsk
  /i:<other.ini> - другой INI-файл, у меня, например, в VCEDIT.EXT прописано:
 	asm:	ts /i:c:\vc\ts_asm.ini  !.!
 	c:	ts /i:c:\vc\ts_wc.ini   !.!
 	cpp:	ts /i:c:\vc\ts_bcc.ini  !.!
 	prg:	ts /i:c:\vc\ts_clip.ini !.!
	т.е. на каждое расширение - свой файл настроек
  /d:<other.dic> - другой файл словаря, например, для другого языка
  /l:<number> - перейти на строку с номером NUMBER в редактируемом файле
  /?  - эта справка


 2.1.Конфигурация
~~~~~~~~~~~~~~~~~~

  Прежде,  чем приступить  к использованию  Turbo Shell,  необходимо
произвести некоторые настройки, а именно:
 - в меню Options-Programs
   ввести  имена   компилятора,  компоновщика,  отладчика   и,  если
   необходимо, альтернативного редактора
 - сразу же можно ввести параметры к каждой из этих программ - пункт
   Options-Command lines
 - после    этого     рекомендуется     сразу     выполнить    пункт
   Options-Save setup-INI-file для того, чтобы при следующем запуске
   программы Turbo Shell не пришлось вводить заново.
 - после этого Вы можете использовать Turbo Shell.

  Вы также можете в меню  Options установить параметры Turbo Shell -
режим  дисплея, используемые  цвета  и другие  установки.  А в  меню
Help-External Help   задать  внешние  программы   помощи,  например,
TechHelp.

  Файл  TS.INI,  который  автоматически считывается  Turbo  Shellпри
запуске,  создается  и  должен  находиться в  том  же  месте  Вашего
винчестера,  где и  TS.COM .  Кроме того  Вы можете  иметь несколько
INI-файлов с  другим названием и  загружать их из  коммандной строки
или интерактивно: Options-Restore setup-INI-file.


 2.2. Редактор
~~~~~~~~~~~~~~~

  Редактор Turbo  Shell позволяет создавать новые  или редактировать
уже  имеющиеся  файлы размером  до  64  Kb. Длина  строки  редактора
ограничена, примерно - 20000 символов,  что более чем достаточно для
компилятора вроде TASM.EXE . При  попытке обрабатывать текст с более
длинными строками, корректная работа не гарантируется.
  В редакторе реализованы различные функции обработки текста:
 - удаление, копирование и перемещение блоков через внутренний буфер
   F5        скопировать в буфер поверх старого содержимого
   Shift-F5  скопировать в буфер с добавлением к старому содержимому
   F6        вставить из буфера
   F8        переместить в буфер поверх старого содержимого
   Shift-F8  переместить в буфер с добавлением к старому содержимому
 - работа с буфером обмена Windows
   Ctrl-X    Cut   (переместить в буфер)
   Ctrl-C    Copy  (скопировать в буфер)
   Ctrl-V    Paste (вставить из буфера)
 - запись отмеченного блока в файл
   меню Edit-Append to
 - вставка в текст программы содержимого другого файла
   меню Edit-Insert from
 - перекодировка текста в блоке: cp866, win2151, koi8-r.
 - операции с выделенным словом
   Alt-M     Cut   (переместить в 255-символьный буфер)
   Alt-C     Copy  (скопировать в 255-символьный буфер)
   Alt-P     Paste (вставить из 255-символьного буфера)
 - удаление строки
   Ctrl-Y
 - удаление до конца строки
   Ctrl-K
 - восстановление ранее удаленной строки (до 256 символов)
   Ctrl-U
 - восстановление удаленного клавишей DELETE (до 256 символов)
   Ctrl-Z
 - поиск вперед, назад, повторение поиска
   F7        вперед
   Shift-F7  назад
   Alt-F7    повторение поиска
 - поиск с заменой - вперед и назад
   Ctrl-F7
 - переход на заданную строку
   Alt-F8
 - ввод любых символов в исходный текст
   Ctrl-Q + Ctrl-<letter> с кодом от 1 до 31
 - вызов  Ascii Table  с последующим вводом  любого символа  или его
   десятичного, шестнадцатеричного или двоичного представления Alt-A
 - калькулятор с необходимыми  операциями, с переключением знакового
   и  беззнакового  режима  и  работающий с  числами  в  десятичном,
   шестнадцатеричном, двоичном и символьном виде
 - режим вставки/замены
   Insert - индикация надписью в нижней строке и формой курсора
 - автоотступ
   меню Options-Configuration: Autoindent или Ctrl-I
 - отметка  слова  под курсором  для последующих  действий над  ним:
   Ctrl-W
 - если нажать Ctrl-P, Ctrl-N или Ctrl-F (near & far), то появляется
   диалоговое  окно,  в котором  Вы  можете  ввести имя  создаваемой
   процедуры -  например: "abc". Если  после этого нажать  Enter, TS
   расширит это в:
             abc     proc    [near|far]
                     ret
             abc     endp
 - (Shift-)Ctrl-E,  Ctrl-B  -  преобразование слова  под курсором  в
   выражение типа:
   extrn  ... :near
   public ...
 - Ctrl-D - добавление слова под курсором в словарь
   словарь зарезервированных слов -  это обычный текстовый файл, где
   на   в  любом   порядке  перечисленны   зарезервированные  слова,
   разделяемые  пробелами,  табуляциями   или  возвратом  каретки  с
   переводом строки

Turbo Shell  не  регистрочувствителен по отношению к файлу словаря. 
AX и ax и Ax - понимаются как одинаковые слова.


 2.3. Альтернативный редактор
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  Если Вас не устраивает  встроенный редактор, если нужно произвести
какие-либо операции, которые не реализованы в Turbo Shell, Вы можете
нажатием   Alt-F4  вызвать   альтернативный  редактор,   который  Вы
определяете   сами.  Внешний   редактор  может   использоваться  для
редактирования файлов более 64 Kb.


 2.4.Создание программ
~~~~~~~~~~~~~~~~~~~~~~~

  После того, как Вы набрали исходный текст Вы можете:
 - скомпилировать его
   Alt-F9 или меню Run: Compile
 - скомпоновать полученный объектный файл в готовую программу
   меню Run: Link
 - сразу выполнить первые два пункта
   F9 или меню Run: Make
 - сразу запустить создаваемую программу, выполнив первые два пункта
   Ctrl-F9 или меню Run: Run

 Вы также можете установить способ компиляции в подменю Project:
 - None         все операции производятся с текущим файлом, или так,
		как Вы определите в меню Options-Command lines

 - Makefile     если установлен  этот пункт,  то при нажатии  F9 или
		Ctrl-F9 будет производится запуск MAKE.EXE

  Подробно  о  способах  компиляции   программ  изложено  в  помощи,
посвященной строкам параметров для запускаемых программ.

  Компиляция всегда осуществляется в текущий каталог.


 2.5.TS.DSK
~~~~~~~~~~~~

  Вы можете сохранить установки в меню Options-Save setup-DSK-file в
файле  TS.DSK.  В  этом  случае,  кроме  установок  Turbo  Shell,  в
пользовательском  файле запоминаются:  
 - имя текущего файла и его маркеры
 - текущая позиция
 - состояние Project
 - установленные маркеры для последних 20 загружавшихся файлов
 - строка поиска.
  При  необходимости, Вы  можете при  следующей работе  восстановить
сохраненное состояние  в меню Options-Restore  setup-DSK-file. Turbo
Shell  загрузит  файл,  который  был текущим,  перейдет  на  строку,
которая была текущей  в момент сохранения и  все параметры настройки
возьмет  из сохраненного  ранее файла,  если соответствующий  файл в
настоящий момент существует.
  Если  файл  TS.DSK,  находился  в  текущем  каталоге  при  запуске
программы Turbo Shell и, в коммандной  строке не был указан файл, то
TS.DSK  будет автоматически  считан  и выполнятся  вышеперечисленные
шаги.


 2.6.Запуск программ
~~~~~~~~~~~~~~~~~~~~~

  Запуск программ из-под Turbo Shell осуществляется двумя способами:
с помощью  COMMAND.COM и непосредственно используя  функцию DOS=4bh.
Причем, при запуске  программ через системное меню  - подменю Run...
всегда   используется  COMMAND.COM,   а  при   запуске  компилятора,
компоновщика,  отладчика,  редактора,  MAKE.EXE и  создаваемой  Вами
программы,  Вы можете  использовать  либо тот,  либо другой  способ.
Переключение осуществляется в меню Options-Configuration.


 2.7.Помощь
~~~~~~~~~~~~

  В Turbo Shell реализована  контекстно-зависимая помощь. В каком бы
месте  программы Вы  не находились,  Вы получите  справку именно  по
этому месту. Помощь  по использованию Turbo Shell, а  не по процессу
программирования, для этого есть много Help-ов: *.ng, TechHelp...
  Вызывается по F1.
  Между прочим, крупнейшая коллекция NG-файлов расположена по адресу
                  http://www.whitetown.com/ru/ng/


 2.8.Справка по клавишам
~~~~~~~~~~~~~~~~~~~~~~~~~

                            Перемещения

на символ влево                 - 
на символ вправо                - 
на строку вверх                 - 
на строку вниз                  - 
                                
к началу строки                 - Home
к концу строки                  - End
на страницу вверх               - Page Up
на страницу вниз                - Page Down
                                
на слово вправо                 - Ctrl - 
на слово влево                  - Ctrl - 
                                
прокрутка экрана вверх          - Ctrl - 
прокрутка экрана вниз           - Ctrl - 
                                
к началу файла                  - Ctrl - Home, Ctrl - Page Up
к концу файла                   - Ctrl - End,  Ctrl - Page Down
                                
переход к метке,                - Ctrl - J
на которой курсор               
возврат от метки, на            - Ctrl - R
которую был переход        

                           Редактирование

удалить символ под курсором                 - Delete         
удалить символ перед курсором               - Backspase      
удалить слово перед курсором                - Ctrl-Backspase 
режим вставки или замены                    - Insert         

"экранировать" ввод                         - Ctrl - Q
автоотступ ON/OFF                           - Ctrl - I

удалить строку                              - Ctrl - Y
удалить до конца строки                     - Ctrl - K
восстановить удаленное Ctrl-Y 
или Ctrl-K                                  - Ctrl - U
восстановить только что
удаленное клавишей Delete                   - Ctrl - Z 
                                                    
переместить отмеченный блок в 
буфер обмена Windows                        - Ctrl - X
скопировать отмеченный блок в
буфер обмена Windows                        - Ctrl - C
вставить в текст блок из 
буфера обмена Windows                       - Ctrl - V
                                                    
отметить слово под курсором                 - Ctrl - W
                                                    
скопировать отмеченное слово
в буфер                                     - Alt - C
переместить отмеченное слово 
в буфер                                     - Alt - M
вставить в текст слово 
из буфера                                   - Alt - P
                                                    
обозначить слово под курсором 
как public                                  - Ctrl - B
обозначить слово под курсором 
как extrn...                                - Ctrl - E
                                                    
диалог для ввода 
NEAR - процедуры                            - Ctrl - N
диалог для ввода 
FAR  - процедуры                            - Ctrl - F
диалог для ввода процедуры      	    - Ctrl - P
макросы					    - Ctrl - M

                           Функциональные

 *  -  эти  клавиши  являются  самыми "горячими"  -  в  любом  месте
программы их нажатие приводит к моментальному исполнению.

помощь                                        F1         *
сохранить файл                                F2         *
загрузка файла с диска                        F3         *
пометить блок (снять пометку)                 F4       
скопировать отмеченный блок в карман          F5       
вставить в текст блок из кармана              F6       
поиск вперед                                  F7       
переместить отмеченный блок в карман          F8       
создать исполняемый файл                      F9         *
вход в меню                                   F10      
                                              
помощь (Index)                                Shift-F1 
сохранить под другим именем                   Shift-F2 
загрузка файла из списка загружавшихся        Shift-F3   *
создать новый файл                            Shift-F4
скопировать во внутренний буфер с добавлением Shift-F5  
установить маркер                             Shift-F6   *
поиск назад                                   Shift-F7 
переместить во внутренний буфер с добавлением Shift-F8   
сохранить установки в файле TS.DSK            Shift-F9   *
                                              
вызвать первую внешнюю программу помощи       Alt - F1 
вызвать вторую внешнюю программу помощи       Alt - F2 
вакрыть текущий файл                          Alt - F3 
вызвать внешний редактор                      Alt - F4 
посмотреть экран пользователя                 Alt - F5   *
посмотреть сообщения об ошибках               Alt - F6 
повторение поиска                             Alt - F7 
перейти на строку...                          Alt - F8   *
компиляция файла                              Alt - F9   *
                                              
вставка в файл шаблона из заданного каталога  Ctrl- F3 
калькулятор                                   Ctrl- F5 
перейти к маркеру                             Ctrl- F6   *
поиск с заменой                               Ctrl- F7 
запуск отладчика                              Ctrl- F8   *
запуск программы на исполнение                Ctrl- F9   *
                                              
                               Прочие
                                              
окно клавиатурных кодов                       Ctrl- S  
таблица символов ASCII                        Alt - A  
выход из программы                            Alt - X    *


 2.9. Макросы
~~~~~~~~~~~~~~

  Для облегчения ввода  разнообразных типичных конструкций исходного
текста  программы  в  программе   Turbo  Shell  реализован  механизм
макросов.  Макросы  описываются  в   файле  TS.MAC,  который  должен
располагаться  в том  же месте  Вашего винчестера,  где и  программа
Turbo Shell. Размер  этого файла не должен превышать  64 Kb. Макросы
описываются следущим образом:
	Название  макроса пишеться  в  квадратных  скобках с  начала
строки  [...]  .  После  закрывающей скобки  может  быть  слово  для
быстрого вызова. Слово - любая  последовательность букв и цифр, если
в редакторе  Turbo Shell ввести  эти символы и нажать  Ctrl-Space, в
редактируемый  файл  будет  вставлено тело  макроса.  Телом  макроса
являются   все  символы,   начинающиеся   со   следующей  строки   и
продолжается  до   следующего  описания  имени   макроса.  Допустимо
использовать до 10 параметров в теле макроса %1..%0, если необходимо
поместить  в  тело  макроса  символ процента,  следует  указать  два
символа - %%. Макрос %_  указывает положение курсора. Размер макроса
ограничен только размером этого файла  и наличием свободного места в
редактируемом файле.
  

	Например:
[tiny program]mt
	.model	tiny
	.code
	org	100h
start:
	%_
	ret

	.data

	end	start
[push/pop reg]
	push	%1
	mov	%1,%_
	
	pop	%1

[for (...)  синтаксис C]
for(%1=0; %1<%2; %1++)
 {
  %_
 }

[for ...  синтаксис Pascal]
for  %1:=0 to %2 do
begin
  %_
end;


 3.использование MASM и LINK
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  Для  правильной  работы  программы  необходимо,  чтобы  компилятор
выдавал ошибки на STDOUT.

  Если  заменить следующие  байты в  MASM.EXE (size=85566),  то MASM
ошибки будет выдавать не на STDERR, а на STDOUT.

masm.exe
0000F9C4: 8A B0
0000F9C5: 44 01
0000F9C6: 07 90

  Если  заменить следующие  байты в  LINK.EXE (size=43988),  то LINK
ошибки будет выдавать не на STDERR, а на STDOUT.

link.exe
000094ED: 8A B0
000094EE: 45 01
000094EF: 07 90

  Это, на мой взгляд, дает возможность использовать их совместно с TS.
  Если Masm & Link другой версии, то преобразование выполняется
аналогично.


 4."Недокументированные" возможности
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  Turbo  Shell, по  моему  скромному  мнению, возможно  приспособить
практически  под любой  язык программирования,  который поддерживает
компиляторы с командной строкой.
  Это было проверено мною с:
	Borland C++	
	Turbo C		
	Watcom C		
	Turbo Pascal	
	FORTRAN
	Quick Basic	
	Clipper
	Delphi
  не мною: 
  	TMT Pascal
  	что-то под OS/2, забыл.
  Кроме того -  FoxPro и Paradox, указывая их  вместо отладчика. При
этом необходимо только сделать  соответсвующие настройки, типа "Show
elapsed time", установить тип ошибок и настроить строки параметров.
При  этом  Вы  можете   лишиться  некоторых  возможностей,  но(!)  в
остальном работает!


 4.1. Настройка ошибок
~~~~~~~~~~~~~~~~~~~~~~~

  Если  Вы  хотите  использовать  программу   TS  для  работы  не  с
Ассемблером, то для этого требуется произвести некоторые настройки.
 - указать имена компилятора и т.п.
 - задать строки параметров для них
 - настроить программу на понимание ошибок компиляции; для некоторых
   из     них,     предусмотрено      переключение     в     диалоге
   Options-Configuraton.  Если ни  одно  переключение  не подошло  к
   Вашему компилятору, то попробуйте настроить это сами:
   1.Нужно установить положение Target = User Setup
   2.Задать 3 магических числа:
     первое - код первого искомого символа в строке с ошибкой
     второе - код второго искомого символа в строке с ошибкой
     третье - смещение от начала строки до имени файла
  Например, для Ассемблера, это будет: 32 40 10

**Error** abc.asm(14) Illegal instruction
         ^^      ^
         ││      └───────── второй символ, который надо искать - 40
         └┼──────────────── первый символ, который надо искать - 32
          └──────────────── смещение 10 символов

  Суть в том, что  если в строке найти сначала символ  с кодом 32, а
потом 40, следущим символом следует номер строки с ошибкой.

  Для Watcom C, это будет: 40 0 0
 
taisa.c(6): Error! E1026: Invalid declarator
^      ^
│      └─────────── первый символ, который надо искать - 40
│      второй символ искать не надо, т.к. первого уже достаточно - 0
└────────────────── смещение 0 символов

И так по аналогии...


 5.Обратная связь
~~~~~~~~~~~~~~~~~~

Если программа Вам понравилась, пришлите мне "спасибо", Вам все равно,
а мне приятно. ;)


Места поддержки:
http://www.whitetown.com/ru/
http://cdbf.hypermart.net/ru/


Copyright (c) Sergey Chehuta
Email: support@whitetown.com
FIDO:           2:4614/46.56
Home:        (05446) 3-18-56
